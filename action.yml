name: 'Quasar Play Store'
description: 'Connect your GitHub Action workflow to Play Store'
author: 'Anant Negi'
branding:
  icon: 'airplay'
  color: 'gray-dark'
inputs:
  play_store_credentials_base64:
      description: 'Play Store Credentials Base Encoded'
      default: ''
      required: true
  app_version:
      description: 'App Version'
      default: ''
      required: true
  package_name:
      description: 'Package Name'
      default: ''
      required: true
  keystore_base64:
      description: 'Keystore File Base Encoded'
      default: ''
      required: true
  alias:
      description: 'Secrets Alias'
      default: ''
      required: true
  key_store_password:
      description: 'Secrets Key Store Password'
      default: ''
      required: true
  app_track:
      description: 'App Track'
      default: 'internal'
      required: true
  build_tools_version:
      description: 'Build Tools Version'
      default: '33.0.2'
      required: true
  node_version:
      description: 'Node Version'
      default: '18'
      required: true
  create_release_tags:
      description: 'Create Release Tags'
      default: true
      required: false
  create_release:
      description: 'Create Release'
      default: true
      required: false
  delete_workflow:
      description: 'Delete Workflow Files'
      default: true
      required: false
runs:
    using: 'composite'
    steps:
      - uses: actions/checkout@v3

      - name: Generate APP_VERSION Release Key
        shell: bash
        run: |
          # echo "play_store_credentials_base64: ${{ inputs.play_store_credentials_base64 }}"
          # echo "app_version: ${{ inputs.app_version }}"
          # echo "package_name: ${{ inputs.package_name }}"
          # echo "keystore_base64: ${{ inputs.keystore_base64 }}"
          # echo "alias: ${{ inputs.alias }}"
          # echo "key_store_password: ${{ inputs.key_store_password }}"
          # echo "app_track: ${{ inputs.app_track }}"
          # echo "build_tools_version: ${{ inputs.build_tools_version }}"
          # echo "node_version: ${{ inputs.node_version }}"
          # echo "create_release_tags: ${{ inputs.create_release_tags }}"
          # echo "create_release: ${{ inputs.create_release }}"
          # echo "delete_workflow: ${{ inputs.delete_workflow }}"

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}  # Adjust this to your desired Node.js version
      
      - name: Inputs Print
        shell: bash
        run: |
          echo "Package Name: ${{ inputs.package_name }}"
          echo "App Version: ${{ inputs.app_version }}"
          echo "Track: ${{ inputs.app_track }}"
          echo "Bundle Tools Version: ${{ inputs.build_tools_version }}"

      - name: Credentials
        id: credentials
        shell: bash
        run: |
          echo play_store="$(echo '${{ inputs.play_store_credentials_base64 }}' | base64 --decode | tr -d '\n')" &> /dev/null >> "$GITHUB_ENV"
          
      - uses: actions/cache@v3
        with:
          key: node-dependencies
          path: node_modules
      - if: steps.cache-dependencies.outputs.cache-hit != 'true'
        shell: bash
        run: |
          yarn global add @quasar/cli
          yarn global add cordova
          yarn install

      - name: Build Mobile Builder
        shell: bash
        run: quasar build -m cordova -T android
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app
        with:
          releaseDirectory: src-cordova/platforms/android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ inputs.keystore_base64 }}
          alias: ${{ inputs.alias }}
          keyStorePassword: ${{ inputs.key_store_password }}
        env:
          BUILD_TOOLS_VERSION: ${{ inputs.build_tools_version }}       
      - uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ steps.credentials.outputs.play_store }}
          track: ${{ inputs.app_track }}
          packageName: ${{ inputs.package_name }}
          releaseName: ${{ inputs.app_version }}
          releaseFiles: ${{ steps.sign_app.outputs.signedReleaseFile }}
          debugSymbols: src-cordova/platforms/android/app/build/intermediates/merged_native_libs/release/out/lib

      - name: Create tags
        if: ${{ inputs.create_release_tags == true }}
        uses: actions/github-script@v5
        with:
          script: |
            const tags = [
              ${{ inputs.app_version }}
            ];

            tags.forEach((tag) => {
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tag}`,
                sha: context.sha
              })
            })

      - name: Release
        if: ${{ inputs.create_release == true }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.app_version }}
          prerelease: false
          generate_release_notes: true
          draft: false
